name: Update Release
on:
  push:
    branches:
      - main
jobs:
  update_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get release ID
        id: get_release_id
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            const release = releases.find(r => r.tag_name === 'v1.0.0')
            if (release) {
              console.log(`Found release ${release.id}`)
              core.setOutput('release_id', release.id)
            } else {
              console.log('No release found')
            }
      - name: Create or update release
        uses: actions/github-script@v4
        if: steps.get_release_id.outputs.release_id
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ steps.get_release_id.outputs.release_id }},
              tag_name: 'v1.0.0',
              name: 'v1.0.0',
              body: 'This is the release body for v1.0.0'
            })
        else:
          uses: actions/github-script@v4
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            script: |
              const { data: release } = await github.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: 'v1.0.0',
                name: 'v1.0.0',
                body: 'This is the release body for v1.0.0'
              })
              console.log(`Created release ${release.id}`)